#!/bin/bash

# Version: 3.2
# A fork of my own install script from Cat-Dots https://github.com/Deathemonic/Cat-Dots/install.sh
# The next installer will be written on python with a tui

red="\033[1;31m"
green="\033[1;32m"
blue="\033[1;36m"
pink="\033[1;39m"

dir="$HOME/.config $HOME/.dotfiles $HOME/.config/berry $HOME/.fonts $HOME/.config/backups"
berry="$HOME/.config/berry"
rice="$HOME/.config/SweetBerry"
dotfiles="$HOME/.config/dotfiles"
config="$HOME/.config"

clear
printf "${blue}01010011 01110111 01100101 01100101 01110100\n"
printf "${pink}01000010 01100101 01110010 01110010 01111001\n"
printf "${green}         The Rice with pastel colors\n"

echo " "
echo " "

printf "${red}[!] This a PROTOTYPE so the commands are just printed they won't actually do something\n" && sleep 3 
printf "${red}[!] Note that the installer won't affect other configs it make a custom folder called berry in your .config if there is such folder already exist it will automatically backup it in (~/.config/backups)\n" && sleep 2
printf "${green}"
read -p "[-] DO YOU WANT TO CONTINUE [Y/N] : " install

case $install in
    N*|n*)
    clear
    printf "${red}[!] Aborting!\n"
esac

case $install in
    Y*|y*)
    for a in $dir; do 
        echo "mkdir -p $a" # Makes the directories
    done

    clear
    printf "${red}[!] If you are in archlinux or any archbased distro it will automatically install the needed dependencies if not it will just copy the files\n"
    printf "${green}"
    read -p "[-] ARE YOU USING ARCHLINUX [Y/N] : " arch

    case $arch in
        Y*|y*)
        clear

        printf "${pink}[*] Updating System\n" && sleep 2
        echo "sudo pacman --noconfirm -Syu"

        printf "${pink}[*] Installing Dependencies\n" && sleep 2
        echo "sudo pacman --noconfirm --needed -S bash zsh git curl xorg"

        printf "${blue}[!] Select a AUR helper (Required)\n"
        printf "${green}"
        read -p "[-] (P)paru | (Y)yay : " helper

        case $helper in
            P*|p*)
            echo "cd $dots"
            echo "git clone https://aur.archlinux.org/paru.git"
            echo "cd paru"
            echo "makepkg -si"
            echo "paru --noconfirm -S berry-git sxhkd-git polybar-git rofi kitty picom-arian8j2-git dunst gtk3 gtk-engine-murrine gnome-themes-extra alsa alsa-utils feh volumectl brightnessctl bluetoothctl playerctl i3lock-color ksuperkey sddm yad cava xclip pulseaudio pulseaudio-alsa pulseaudio-bluetooth xbrightness xcolor mpd mpc polkit-gnome xfce4-power-manager viewnior maim ttf-sarasa-gothic ttf-jetbrains-mono"
        esac

        case $helper in
            Y*|y*) 
            echo "cd $dots"
            echo "git clone https://aur.archlinux.org/yay.git"
            echo "cd yay"
            echo "makepkg -si"
            echo "yay --noconfirm -S berry-git sxhkd-git polybar-git rofi kitty picom-arian8j2-git dunst gtk3 gtk-engine-murrine gnome-themes-extra alsa alsa-utils feh volumectl brightnessctl bluetoothctl playerctl i3lock-color ksuperkey sddm yad cava xclip pulseaudio pulseaudio-alsa pulseaudio-bluetooth xbrightness xcolor mpd mpc polkit-gnome xfce4-power-manager viewnior maim ttf-sarasa-gothic ttf-jetbrains-mono"
        esac

    esac
    clear

    printf "${pink}[*] Getting dotfiles\n" && sleep 2
    echo "cd $dotfiles && git clone https://github.com/Deathemonic/SweetBerry.git"
    echo "cd $rice"

    printf "${pink}[*] Making backups\n" && sleep 2
    if [[ -d $berry ]]; then
        echo "cp -rf $berry $config/backups/"
    else
        echo "No old berry folder so skipped"
    fi
    printf "${blue}[*] Backups done\n" && sleep 1

    printf "${pink}[*] Copying dotfiles\n" && sleep 3
    echo "cp -rf $rice/berry/* $config/"
    echo "cp -rf $rice/misc/.zshrc $HOME/"
    echo "cp -rf $rice/misc/.fonts/* $HOME/.fonts"
    printf "${blue}[*] Dotfiles copied\n" && sleep 2

    printf "${pink}[*] Making scripts excutables\n" && sleep 2
    echo "chmod +x $berry/bin/*"
    echo "chmod +x $berry/bin/eww/*"
    echo "chmod +x $berry/bin/polybar/*"
    echo "chmod +x $berry/bin/rofi/*"
    echo "chmod +x $berry/eww/scripts/*"
    echo "chmod +x $berry/autostart"
    printf "${blue}[*] Scripts are now excutables\n" && sleep 1 

    clear
    printf "${blue}[!] Do you want to install extra stuff like gtk themes and a option to change lockscreen type (Optional)\n"
    printf "${green}"
    read -p "[-] [Y/N] : " extra

    case $extra in
        Y*|y*)
        clear

        printf "${red}[!] This will require inputs from the user so just be aware for that\n" && sleep 3

        printf "${pink}[*] Setting up GTK theme\n" && sleep 1
        echo "sudo cp -rf $rice/misc/gtk/* /usr/share/themes/"
        printf "${blue}[*] Gtk theme set\n" && sleep 1

        printf "${pink}[*] Setting up cursor theme\n" && sleep 1
        echo "sudo cp -rf $rice/misc/cursor/* /usr/share/icons/"
        printf "${blue}[*] Cursor theme set\n" && sleep 1

        printf "${pink}[*] Setting up folder icons\n" && sleep 1
        echo "sudo cp -rf $rice/misc/folders/* /usr/share/icons"
        printf "${blue}[*] Folders set\n" && sleep 1

        printf "${red}[!] Use lxappearance to set your themes and icons, Select with the name Pastel on them\n" && sleep 3
        printf "${red}[!] If the you can see the themes please go to this page (https://github.com/Deathemonic/SweetBerry/wiki) for a fix\n" && sleep 5

        printf "${pink}[*] Setting up Spicetify theme\n" && sleep 2
        printf "${red}[!] If spotify opens just wait for it to close or manually close it your self\n" && sleep 3
        if [[ -d $config/spicetify ]] && [[ -d $HOME/.spicetify ]]; then
            echo "curl -fsSL https://raw.githubusercontent.com/Deathemonic/Pastel/comfy/install.sh | sh"
        else
            echo "curl -fsSL https://raw.githubusercontent.com/spicetify/spicetify-cli/master/install.sh | sh"
            echo "curl -fsSL https://raw.githubusercontent.com/spicetify/spicetify-marketplace/main/install.sh | sh"
            echo "curl -fsSL https://raw.githubusercontent.com/Deathemonic/Pastel/comfy/install.sh | sh"
        fi
        printf "${blue}[*] Spicetify done\n" && sleep 1

        printf "${pink}[*] Setting up NvChad\n" && sleep 2
        printf "${pink}[*] Removing Old NvChad (If already exist)\n" && sleep 2
        if [[ -d $config/nvim ]] && [[ -d $HOME/.cache/nvim ]] && [[ -d $HOME/.local/share/nvim ]]; then
            echo "rm -rf $config/nvim && rm -rf $HOME/.local/share/nvim && rm -rf $HOME/.cache/nvim"
        else
            echo "No old NvChad files so skipped"
        fi
        printf "${pink}[*] Installing NvChad\n" && sleep 1
        printf "${red}[!] It will put you in neovim just wait if the syncing is finished after just quit out in neovim\n" && sleep 2 
        echo "git clone https://github.com/Deathemonic/Pastel.git $HOME/.config/nvim -b NvChad --depth 1"
        echo "nvim +'hi NormalFloat guibg=#1e222a' +PackerSync"
        printf "${blue}[*] NvChad done\n" && sleep 1

        printf "${pink}[*] Setting up VSCode theme\n" && sleep 1
        if [[ -d $HOME/.vscode ]]; then
            echo "git clone https://github.com/Deathemonic/Pastel $HOME/.vscode/extensions/Pastel -b vscode"
        else
            echo "VSCode folder doesn't exist"
        fi
        if [[ -d $HOME/.vscode-oss ]]; then
            echo "git clone https://github.com/Deathemonic/Pastel $HOME/.vscode-oss/extensions/Pastel -b vscode"
        else
            echo "VSCodium folder doesn't exist"
        fi
        printf "${blue}[*] VSCode theme done\n" && sleep 1

    esac

    clear
    printf "${pink}01101000 01110100 01110100 01110000 01110011 00111010 00101111 00101111\n"
    printf "${blue}01110100 01101001 01101110 01111001 01110101 01110010 01101100 00101110\n"
    printf "${green}01100011 01101111 01101101 00101111 01100010 01100101 01110100 01111001\n" 
    printf "${red}01101111 01110101 01100011 01101111 01101110 01110110 01100101 01110010\n" 
    printf "${pink}01110100 01100101 01100100 01110100 01101000 01101001 01110011\n"

    echo " "
    echo " "

    printf "${blue}[!] Finished installed\n" && sleep 2
    printf "${red}[!] If you have trouble installing it please go to this page for a fix (https://github.com/Deathemonic/SweetBerry/wiki) or summit a issue in (https://github.com/Deathemonic/SweetBerry/issues)\n" && sleep 4
    printf "${green}[!] Please consider buying me a coffee on ko-fi (https://ko-fi.com/Deathemonic), Thanks!\n" && sleep 2

esac