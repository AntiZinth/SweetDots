#!/bin/bash

cache="$HOME/.cache/ewwsideboard"
logs="$cache/notifications.txt"
empty_quote_cache="$cache/quotes.txt"
empty_quote="No notifications"

mkdir $cache 2>/dev/null
touch $empty_quote_cache 2>/dev/null

notify_add () { 
  [[ "$1" != "" ]] && echo "$1" >> "$empty_quote_cache" 
}

rm () {
    sed -i "$1d" "$empty_quote_cache"
}

rand () {
  local quote="$(cat $empty_quote_cache | shuf | head -n1)"
  [[ "$quote" == "" ]] && echo "$empty_quote_cache" || echo "$quote"
}

updatequotes () {
    uri=$(curl -s "https://api.quotable.io/random")

    echo $uri | jq '.content' |  cut -d "\"" -f 2 > "$HOME/.cache/eww.quote"
    echo $uri | jq '.author' |  cut -d "\"" -f 2 > "$HOME/.cache/eww.author"
}

quote=$(cat $HOME/.cache/eww.quote)
author=$(cat $HOME/.cache/eww.author)

if [ "$quote" = "" ] ; then
	quote="Bad programmers worry about the code. Good programmers worry about data structures and their relationships."
    author="Linus Torvalds"
fi

# Usage
doc () {
    echo "Usage:
    quotes [Options]

    Options:
        quote    show a quote
        next	 shows the author
        update   updates the quote"
}

# Execute
case $1 in
    quote)
        echo $quote
    ;;
    author)
        echo "~ $author ~"
    ;;
    update)
        updatequotes
    ;;
    notify_empty_add) 
        add "$2"
    ;;
    notify_empty_remove)
        rm "$2"
    ;;
    notify_empty_rand) 
        rand
    ;;
    notify_empty_all) 
        cat "$empty_quote_cache"
    ;;
    notify_empty)
        echo "$empty_quote"
    ;;
    *)
        doc
    ;;
esac